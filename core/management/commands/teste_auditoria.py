from django.core.management.base import BaseCommand
from django.contrib.auth.models import User
from core.models import AuditLog
from core.logging_utils import SimpleLogger

class Command(BaseCommand):
    help = 'Testa o sistema de auditoria'

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('üîç Testando sistema de auditoria...'))
        
        # Criar um usu√°rio de teste se n√£o existir
        user, created = User.objects.get_or_create(
            username='teste_audit',
            defaults={
                'email': 'teste@exemplo.com',
                'is_staff': False,
                'is_active': True
            }
        )
        
        if created:
            self.stdout.write(f'‚úÖ Usu√°rio de teste criado: {user.username}')
        else:
            self.stdout.write(f'‚ÑπÔ∏è  Usando usu√°rio existente: {user.username}')
        
        # Testar diferentes tipos de log
        try:
            # Log de a√ß√£o simples
            SimpleLogger.log_action(
                user=user,
                action='TEST',
                description='Teste do sistema de auditoria',
                severity='LOW'
            )
            self.stdout.write('‚úÖ Log de a√ß√£o criado')
            
            # Log de login
            SimpleLogger.log_login(user, success=True, ip_address='127.0.0.1', user_agent='Test Browser')
            self.stdout.write('‚úÖ Log de login criado')
            
            # Log de importa√ß√£o
            SimpleLogger.log_import(user, 'ALUNOS', 5, 0)
            self.stdout.write('‚úÖ Log de importa√ß√£o criado')
            
            # Log de erro
            SimpleLogger.log_error(user, 'Erro de teste para auditoria')
            self.stdout.write('‚úÖ Log de erro criado')
            
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'‚ùå Erro ao criar logs: {e}'))
            return
        
        # Verificar se os logs foram criados
        total_logs = AuditLog.objects.filter(usuario=user).count()
        self.stdout.write(f'üìä Total de logs criados para o usu√°rio: {total_logs}')
        
        # Exibir os √∫ltimos logs
        ultimos_logs = AuditLog.objects.filter(usuario=user).order_by('-timestamp')[:5]
        
        self.stdout.write('\nüìã √öltimos logs de auditoria:')
        for log in ultimos_logs:
            self.stdout.write(f'  ‚Ä¢ {log.timestamp.strftime("%d/%m/%Y %H:%M")} - {log.acao} - {log.descricao[:50]}...')
        
        self.stdout.write(self.style.SUCCESS('\n‚úÖ Teste de auditoria conclu√≠do com sucesso!'))
        self.stdout.write('üí° Voc√™ pode visualizar os logs no admin em: http://127.0.0.1:8000/admin/core/auditlog/')